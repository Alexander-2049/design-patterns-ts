{"version":3,"file":"app.js","mappings":"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9B;AACA,uDAAuD,iEAAiE;AACxH,uDAAuD,gEAAgE;AACvH,uDAAuD,iEAAiE;AACxH,uDAAuD,2DAA2D;AAClH;AACA,wBAAwB;;;;;;;;;;;ACrBX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;UCjBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAO,CAAC,qEAA4B;AACpC,mBAAO,CAAC,iEAA0B;AAClC,mBAAO,CAAC,mEAA2B;AACnC,wBAAwB,mBAAO,CAAC,uDAAqB;AACrD,oBAAoB,mBAAO,CAAC,2DAAuB;AACnD,uBAAuB,mBAAO,CAAC,2DAAuB;AACtD,6BAA6B,mBAAO,CAAC,6EAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA","sources":["webpack://design-patterns-ts/./src/app/CoffeeMachine.ts","webpack://design-patterns-ts/./src/drinks/DrinkFactory.ts","webpack://design-patterns-ts/./src/drinks/predefined/Cappuccino.ts","webpack://design-patterns-ts/./src/drinks/predefined/Espresso.ts","webpack://design-patterns-ts/./src/drinks/predefined/Latte.ts","webpack://design-patterns-ts/./src/ingredients/IngredientRegistry.ts","webpack://design-patterns-ts/./src/ingredients/IngredientUnit.ts","webpack://design-patterns-ts/./src/ingredients/types/Coffee.ts","webpack://design-patterns-ts/./src/ingredients/types/Ingredient.ts","webpack://design-patterns-ts/./src/ingredients/types/Milk.ts","webpack://design-patterns-ts/./src/ingredients/types/Water.ts","webpack://design-patterns-ts/./src/inventory/Inventory.ts","webpack://design-patterns-ts/./src/inventory/defaultIngredients.ts","webpack://design-patterns-ts/./src/observer/Observable.ts","webpack://design-patterns-ts/webpack/bootstrap","webpack://design-patterns-ts/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoffeeMachine = void 0;\nclass CoffeeMachine {\n    constructor(inventory) {\n        this.inventory = inventory;\n    }\n    addObserver(observer) {\n        this.inventory.addObserver(observer);\n    }\n    makeDrink(drink) {\n        console.log(`🛠️ Attempting to make: ${drink.name}`);\n        if (!this.inventory.hasEnough(drink.requiredIngredients)) {\n            console.log(`❌ Not enough ingredients for ${drink.name}`);\n            this.inventory.notifyObservers(`❌ Not enough ingredients for ${drink.name}`);\n            return false;\n        }\n        const success = this.inventory.useIngredients(drink.requiredIngredients);\n        if (success) {\n            console.log(`✅ ${drink.name} is ready!`);\n            this.inventory.notifyObservers(`✅ ${drink.name} is ready!`);\n        }\n        return success;\n    }\n    refillIngredient(name, amount) {\n        this.inventory.refill(name, amount);\n    }\n    showInventory() {\n        console.log(`📦 Inventory: ${this.inventory.getStatus()}`);\n    }\n}\nexports.CoffeeMachine = CoffeeMachine;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DrinkFactory = void 0;\nconst Espresso_1 = require(\"./predefined/Espresso\");\nconst Cappuccino_1 = require(\"./predefined/Cappuccino\");\nconst Latte_1 = require(\"./predefined/Latte\");\nclass DrinkFactory {\n    static register(name, creator) {\n        this.registry.set(name.toLowerCase(), creator);\n    }\n    static create(name) {\n        const creator = this.registry.get(name.toLowerCase());\n        return creator === null || creator === void 0 ? void 0 : creator();\n    }\n    static getAvailableDrinks() {\n        return Array.from(this.registry.keys());\n    }\n}\nexports.DrinkFactory = DrinkFactory;\n_a = DrinkFactory;\nDrinkFactory.registry = new Map();\n(() => {\n    _a.register('espresso', () => new Espresso_1.Espresso());\n    _a.register('cappuccino', () => new Cappuccino_1.Cappuccino());\n    _a.register('latte', () => new Latte_1.Latte());\n})();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cappuccino = void 0;\nclass Cappuccino {\n    constructor() {\n        this.name = 'Cappuccino';\n        this.requiredIngredients = {\n            coffee: 10,\n            water: 30,\n            milk: 60,\n        };\n    }\n}\nexports.Cappuccino = Cappuccino;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Espresso = void 0;\nclass Espresso {\n    constructor() {\n        this.name = 'Espresso';\n        this.requiredIngredients = {\n            coffee: 10,\n            water: 30,\n        };\n    }\n}\nexports.Espresso = Espresso;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Latte = void 0;\nclass Latte {\n    constructor() {\n        this.name = 'Latte';\n        this.requiredIngredients = {\n            coffee: 10,\n            water: 30,\n            milk: 100,\n        };\n    }\n}\nexports.Latte = Latte;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IngredientRegistry = void 0;\nclass IngredientRegistry {\n    static register(ingredient) {\n        this.ingredients.set(ingredient.name.toLowerCase(), ingredient);\n    }\n    static get(name) {\n        return this.ingredients.get(name.toLowerCase());\n    }\n    static getAll() {\n        return Array.from(this.ingredients.values());\n    }\n}\nexports.IngredientRegistry = IngredientRegistry;\nIngredientRegistry.ingredients = new Map();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IngredientUnit = void 0;\nvar IngredientUnit;\n(function (IngredientUnit) {\n    IngredientUnit[\"GRAM\"] = \"g\";\n    IngredientUnit[\"MILLILITER\"] = \"ml\";\n})(IngredientUnit || (exports.IngredientUnit = IngredientUnit = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IngredientRegistry_1 = require(\"../IngredientRegistry\");\nconst IngredientUnit_1 = require(\"../IngredientUnit\");\nIngredientRegistry_1.IngredientRegistry.register({\n    name: 'Coffee',\n    unit: IngredientUnit_1.IngredientUnit.GRAM,\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ingredient = void 0;\nclass Ingredient {\n    constructor(name, amount, unit) {\n        this.name = name.toLowerCase();\n        this.amount = amount;\n        this.unit = unit;\n    }\n    consume(quantity) {\n        if (quantity <= this.amount) {\n            this.amount -= quantity;\n            return true;\n        }\n        return false;\n    }\n    refill(quantity) {\n        this.amount += quantity;\n    }\n    toString() {\n        return `${this.name}: ${this.amount} ${this.unit}`;\n    }\n}\nexports.Ingredient = Ingredient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IngredientRegistry_1 = require(\"../IngredientRegistry\");\nconst IngredientUnit_1 = require(\"../IngredientUnit\");\nIngredientRegistry_1.IngredientRegistry.register({\n    name: 'Milk',\n    unit: IngredientUnit_1.IngredientUnit.MILLILITER,\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IngredientRegistry_1 = require(\"../IngredientRegistry\");\nconst IngredientUnit_1 = require(\"../IngredientUnit\");\nIngredientRegistry_1.IngredientRegistry.register({\n    name: 'Water',\n    unit: IngredientUnit_1.IngredientUnit.MILLILITER,\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Inventory = void 0;\nconst IngredientRegistry_1 = require(\"../ingredients/IngredientRegistry\");\nconst Observable_1 = require(\"../observer/Observable\");\nclass Inventory extends Observable_1.Observable {\n    constructor() {\n        super();\n        this.storage = new Map();\n        IngredientRegistry_1.IngredientRegistry.getAll().forEach(ingredient => {\n            this.storage.set(ingredient.name.toLowerCase(), 0);\n        });\n    }\n    add(ingredient) {\n        const name = ingredient.name.toLowerCase();\n        const current = this.storage.get(name) || 0;\n        this.storage.set(name, current + ingredient.amount);\n        this.notifyObservers(`+ Added ${ingredient.amount} of ${ingredient.name}`);\n    }\n    refill(ingredientName, amount) {\n        const name = ingredientName.toLowerCase();\n        const current = this.storage.get(name) || 0;\n        this.storage.set(name, current + amount);\n        this.notifyObservers(`+ Refilled ${amount} of ${ingredientName}`);\n    }\n    hasEnough(required) {\n        return Object.entries(required).every(([name, requiredAmount]) => {\n            const current = this.storage.get(name.toLowerCase()) || 0;\n            return current >= requiredAmount;\n        });\n    }\n    useIngredients(required) {\n        if (!this.hasEnough(required))\n            return false;\n        for (const [name, amount] of Object.entries(required)) {\n            const current = this.storage.get(name.toLowerCase());\n            this.storage.set(name.toLowerCase(), current - amount);\n        }\n        this.notifyObservers(`- Used ingredients: ${JSON.stringify(required)}`);\n        return true;\n    }\n    getStatus() {\n        return Array.from(this.storage.entries())\n            .map(([name, amount]) => `${name}: ${amount}`)\n            .join(', ');\n    }\n    getIngredientAmount(name) {\n        return this.storage.get(name.toLowerCase()) || 0;\n    }\n}\nexports.Inventory = Inventory;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.registerDefaults = exports.loadDefaultIngredients = void 0;\nconst Ingredient_1 = require(\"../ingredients/types/Ingredient\");\nconst IngredientUnit_1 = require(\"../ingredients/IngredientUnit\");\nconst IngredientRegistry_1 = require(\"../ingredients/IngredientRegistry\");\nfunction loadDefaultIngredients() {\n    return [\n        new Ingredient_1.Ingredient('Water', 200, IngredientUnit_1.IngredientUnit.MILLILITER),\n        new Ingredient_1.Ingredient('Milk', 200, IngredientUnit_1.IngredientUnit.MILLILITER),\n        new Ingredient_1.Ingredient('CoffeeBeans', 200, IngredientUnit_1.IngredientUnit.GRAM),\n        new Ingredient_1.Ingredient('Sugar', 200, IngredientUnit_1.IngredientUnit.GRAM),\n    ];\n}\nexports.loadDefaultIngredients = loadDefaultIngredients;\nfunction registerDefaults() {\n    IngredientRegistry_1.IngredientRegistry.register({ name: 'Water', unit: IngredientUnit_1.IngredientUnit.MILLILITER });\n    IngredientRegistry_1.IngredientRegistry.register({ name: 'Milk', unit: IngredientUnit_1.IngredientUnit.MILLILITER });\n    IngredientRegistry_1.IngredientRegistry.register({ name: 'CoffeeBeans', unit: IngredientUnit_1.IngredientUnit.GRAM });\n    IngredientRegistry_1.IngredientRegistry.register({ name: 'Sugar', unit: IngredientUnit_1.IngredientUnit.GRAM });\n}\nexports.registerDefaults = registerDefaults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Observable = void 0;\nclass Observable {\n    constructor() {\n        this.observers = [];\n    }\n    addObserver(observer) {\n        this.observers.push(observer);\n    }\n    removeObserver(observer) {\n        this.observers = this.observers.filter(o => o !== observer);\n    }\n    notifyObservers(message) {\n        this.observers.forEach(observer => observer.update(message));\n    }\n}\nexports.Observable = Observable;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nvar _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./ingredients/types/Coffee\");\nrequire(\"./ingredients/types/Milk\");\nrequire(\"./ingredients/types/Water\");\nconst CoffeeMachine_1 = require(\"./app/CoffeeMachine\");\nconst Inventory_1 = require(\"./inventory/Inventory\");\nconst DrinkFactory_1 = require(\"./drinks/DrinkFactory\");\nconst defaultIngredients_1 = require(\"./inventory/defaultIngredients\");\nclass DOMLogger {\n    constructor() {\n        this.logEl = document.getElementById('log');\n    }\n    update(message) {\n        const li = document.createElement('li');\n        li.textContent = message;\n        this.logEl.appendChild(li);\n    }\n}\n(0, defaultIngredients_1.registerDefaults)();\nconst inventory = new Inventory_1.Inventory();\n(0, defaultIngredients_1.loadDefaultIngredients)().forEach(ing => inventory.add(ing));\nconst coffeeMachine = new CoffeeMachine_1.CoffeeMachine(inventory);\ncoffeeMachine.addObserver(new DOMLogger());\nfunction updateInventoryUI() {\n    const el = document.getElementById('inventory');\n    el.textContent = inventory.getStatus();\n}\nfunction initDrinkSelect() {\n    const select = document.getElementById('drink-select');\n    select.innerHTML = '';\n    DrinkFactory_1.DrinkFactory.getAvailableDrinks().forEach(name => {\n        const option = document.createElement('option');\n        option.value = name;\n        option.textContent = name;\n        select.appendChild(option);\n    });\n}\n(_a = document.getElementById('make-btn')) === null || _a === void 0 ? void 0 : _a.addEventListener('click', () => {\n    const drinkName = document.getElementById('drink-select').value;\n    const drink = DrinkFactory_1.DrinkFactory.create(drinkName);\n    if (drink) {\n        coffeeMachine.makeDrink(drink);\n        updateInventoryUI();\n    }\n});\n(_b = document.getElementById('refill-btn')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', () => {\n    const name = document.getElementById('ingredient-name').value\n        .trim()\n        .toLowerCase();\n    const amount = parseFloat(document.getElementById('ingredient-amount').value);\n    if (name && amount > 0) {\n        coffeeMachine.refillIngredient(name, amount);\n        updateInventoryUI();\n    }\n});\ninitDrinkSelect();\nupdateInventoryUI();\n"],"names":[],"sourceRoot":""}